openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/register:
    post:
      summary: 'Register a new user'
      operationId: registerANewUser
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  user:
                    id: 1
                    name: 'John Doe'
                    email: john@example.com
                  token: 1|abcdef123456...
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: john@example.com
                  token:
                    type: string
                    example: 1|abcdef123456...
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  name:
                    - 'The name field is required.'
                  email:
                    - 'The email field is required.'
                  password:
                    - 'The password must be at least 8 characters.'
                properties:
                  name:
                    type: array
                    example:
                      - 'The name field is required.'
                    items:
                      type: string
                  email:
                    type: array
                    example:
                      - 'The email field is required.'
                    items:
                      type: string
                  password:
                    type: array
                    example:
                      - 'The password must be at least 8 characters.'
                    items:
                      type: string
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the user.'
                  example: 'John Doe'
                  nullable: false
                email:
                  type: string
                  description: 'The email address of the user.'
                  example: john@example.com
                  nullable: false
                password:
                  type: string
                  description: 'The password of the user. Must be at least 8 characters.'
                  example: password123
                  nullable: false
                confirm_password:
                  type: string
                  description: 'Password confirmation. Must match the password.'
                  example: eius
                  nullable: false
              required:
                - name
                - email
                - password
                - confirm_password
      security: []
  /api/login:
    post:
      summary: 'Login user'
      operationId: loginUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  user:
                    id: 1
                    name: 'John Doe'
                    email: john@example.com
                  token: 1|abcdef123456...
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: john@example.com
                  token:
                    type: string
                    example: 1|abcdef123456...
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid credentials'
                properties:
                  message:
                    type: string
                    example: 'Invalid credentials'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of the user.'
                  example: john@example.com
                  nullable: false
                password:
                  type: string
                  description: 'The password of the user.'
                  example: password123
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: 'Logout user'
      operationId: logoutUser
      description: ''
      parameters: []
      responses:
        204:
          description: ''
      tags:
        - Authentication
      security: []
  /api/tasks:
    get:
      summary: 'List all tasks with filtering, sorting, and pagination.'
      operationId: listAllTasksWithFilteringSortingAndPagination
      description: ''
      parameters:
        -
          in: query
          name: showArchived
          description: 'Optional. If true, includes archived tasks. Default: false.'
          example: false
          required: false
          schema:
            type: boolean
            description: 'Optional. If true, includes archived tasks. Default: false.'
            example: false
            nullable: false
        -
          in: query
          name: priority
          description: 'Optional. Filter by priority level (Urgent, High, Normal, Low).'
          example: High
          required: false
          schema:
            type: string
            description: 'Optional. Filter by priority level (Urgent, High, Normal, Low).'
            example: High
            nullable: false
        -
          in: query
          name: due_date_from
          description: 'date Optional. Filter tasks due from this date (inclusive).'
          example: '2023-11-01'
          required: false
          schema:
            type: string
            description: 'date Optional. Filter tasks due from this date (inclusive).'
            example: '2023-11-01'
            nullable: false
        -
          in: query
          name: due_date_to
          description: 'date Optional. Filter tasks due up to this date (inclusive).'
          example: '2023-11-30'
          required: false
          schema:
            type: string
            description: 'date Optional. Filter tasks due up to this date (inclusive).'
            example: '2023-11-30'
            nullable: false
        -
          in: query
          name: completed_date_from
          description: 'date Optional. Filter tasks completed from this date (inclusive).'
          example: '2023-11-01'
          required: false
          schema:
            type: string
            description: 'date Optional. Filter tasks completed from this date (inclusive).'
            example: '2023-11-01'
            nullable: false
        -
          in: query
          name: completed_date_to
          description: 'date Optional. Filter tasks completed up to this date (inclusive).'
          example: '2023-11-30'
          required: false
          schema:
            type: string
            description: 'date Optional. Filter tasks completed up to this date (inclusive).'
            example: '2023-11-30'
            nullable: false
        -
          in: query
          name: archived_date_from
          description: 'date Optional. Filter tasks archived from this date (inclusive).'
          example: '2023-11-01'
          required: false
          schema:
            type: string
            description: 'date Optional. Filter tasks archived from this date (inclusive).'
            example: '2023-11-01'
            nullable: false
        -
          in: query
          name: archived_date_to
          description: 'date Optional. Filter tasks archived up to this date (inclusive).'
          example: '2023-11-30'
          required: false
          schema:
            type: string
            description: 'date Optional. Filter tasks archived up to this date (inclusive).'
            example: '2023-11-30'
            nullable: false
        -
          in: query
          name: search
          description: 'Optional. Search for tasks by title or description.'
          example: project
          required: false
          schema:
            type: string
            description: 'Optional. Search for tasks by title or description.'
            example: project
            nullable: false
        -
          in: query
          name: sort_by
          description: 'Optional. Sort by field (title, description, due_date, created_at, completed_at, priority).'
          example: due_date
          required: false
          schema:
            type: string
            description: 'Optional. Sort by field (title, description, due_date, created_at, completed_at, priority).'
            example: due_date
            nullable: false
        -
          in: query
          name: sort_order
          description: 'Optional. Sort order (asc, desc). Default: asc.'
          example: asc
          required: false
          schema:
            type: string
            description: 'Optional. Sort order (asc, desc). Default: asc.'
            example: asc
            nullable: false
        -
          in: query
          name: page
          description: 'Optional. Page number for pagination. Default: 1.'
          example: 2
          required: false
          schema:
            type: integer
            description: 'Optional. Page number for pagination. Default: 1.'
            example: 2
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      title: 'My Task'
                      description: 'This is a task description.'
                      completed: false
                      priority: High
                      due_date: '2023-11-10'
                      tags:
                        -
                          name: urgent
                      attachments:
                        -
                          id: 1
                          file_path: uploaded_files/1/attachments/sample.jpg
                  links:
                    first: 'http://example.com/api/tasks?page=1'
                    last: 'http://example.com/api/tasks?page=10'
                    prev: null
                    next: 'http://example.com/api/tasks?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 10
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://example.com/api/tasks?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://example.com/api/tasks?page=2'
                        label: '2'
                        active: false
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://example.com/api/tasks'
                    per_page: 10
                    to: 10
                    total: 100
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        title: 'My Task'
                        description: 'This is a task description.'
                        completed: false
                        priority: High
                        due_date: '2023-11-10'
                        tags:
                          -
                            name: urgent
                        attachments:
                          -
                            id: 1
                            file_path: uploaded_files/1/attachments/sample.jpg
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: 'My Task'
                        description:
                          type: string
                          example: 'This is a task description.'
                        completed:
                          type: boolean
                          example: false
                        priority:
                          type: string
                          example: High
                        due_date:
                          type: string
                          example: '2023-11-10'
                        tags:
                          type: array
                          example:
                            -
                              name: urgent
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                example: urgent
                        attachments:
                          type: array
                          example:
                            -
                              id: 1
                              file_path: uploaded_files/1/attachments/sample.jpg
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              file_path:
                                type: string
                                example: uploaded_files/1/attachments/sample.jpg
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://example.com/api/tasks?page=1'
                      last:
                        type: string
                        example: 'http://example.com/api/tasks?page=10'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://example.com/api/tasks?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 10
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://example.com/api/tasks?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'http://example.com/api/tasks?page=2'
                            label: '2'
                            active: false
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://example.com/api/tasks'
                      per_page:
                        type: integer
                        example: 10
                      to:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 100
      tags:
        - 'Task Management'
      security: []
    post:
      summary: 'Create a new task'
      operationId: createANewTask
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  title: 'My Task'
                  description: 'This is a task description.'
                  due_date: '2023-11-10'
                  priority: High
                  completed: false
                  archived: false
                  tags:
                    -
                      id: 1
                      name: work
                    -
                      id: 2
                      name: important
                  attachments:
                    -
                      id: 1
                      file_path: uploaded_files/1/attachments/file1.jpeg
                  created_at: '2023-11-06T00:00:00.000000Z'
                  updated_at: '2023-11-06T00:00:00.000000Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: 'My Task'
                  description:
                    type: string
                    example: 'This is a task description.'
                  due_date:
                    type: string
                    example: '2023-11-10'
                  priority:
                    type: string
                    example: High
                  completed:
                    type: boolean
                    example: false
                  archived:
                    type: boolean
                    example: false
                  tags:
                    type: array
                    example:
                      -
                        id: 1
                        name: work
                      -
                        id: 2
                        name: important
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: work
                  attachments:
                    type: array
                    example:
                      -
                        id: 1
                        file_path: uploaded_files/1/attachments/file1.jpeg
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        file_path:
                          type: string
                          example: uploaded_files/1/attachments/file1.jpeg
                  created_at:
                    type: string
                    example: '2023-11-06T00:00:00.000000Z'
                  updated_at:
                    type: string
                    example: '2023-11-06T00:00:00.000000Z'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The given data was invalid.'
                  errors:
                    title:
                      - 'The title field is required.'
                    description:
                      - 'The description field is required.'
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    type: object
                    properties:
                      title:
                        type: array
                        example:
                          - 'The title field is required.'
                        items:
                          type: string
                      description:
                        type: array
                        example:
                          - 'The description field is required.'
                        items:
                          type: string
      tags:
        - 'Task Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'The title of the task.'
                  example: 'My Task'
                  nullable: false
                description:
                  type: string
                  description: 'The description of the task.'
                  example: 'This is a task description.'
                  nullable: false
                due_date:
                  type: date
                  description: 'The due date for the task.'
                  example: '2023-11-10'
                  nullable: true
                priority:
                  type: string
                  description: 'The priority of the task. Must be one of: Urgent, High, Normal, Low.'
                  example: High
                  nullable: true
                completed:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                archived:
                  type: boolean
                  description: 'Optional. Whether the task is archived.'
                  example: false
                  nullable: true
                tags:
                  type: array
                  description: 'Optional. An array of tags associated with the task.'
                  example:
                    - work
                    - important
                  items:
                    type: string
                attachments:
                  type: array
                  description: 'Optional. An array of files to attach to the task.'
                  example:
                    - consequatur
                  items:
                    type: string
                attachmentsToDelete:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: string
              required:
                - title
                - description
      security: []
  '/api/tasks/{task}':
    get:
      summary: 'Show a single task'
      operationId: showASingleTask
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  title: 'My Task'
                  description: 'This is a task description.'
                  due_date: '2023-11-10'
                  priority: High
                  completed: false
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: 'My Task'
                  description:
                    type: string
                    example: 'This is a task description.'
                  due_date:
                    type: string
                    example: '2023-11-10'
                  priority:
                    type: string
                    example: High
                  completed:
                    type: boolean
                    example: false
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Task not found'
                properties:
                  error:
                    type: string
                    example: 'Task not found'
      tags:
        - 'Task Management'
      security: []
    put:
      summary: 'Update a task'
      operationId: updateATask
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  title: 'Updated Task Title'
                  description: 'Updated task description.'
                  due_date: '2023-11-15'
                  priority: Normal
                  completed: true
                  archived: false
                  tags:
                    -
                      id: 1
                      name: work
                    -
                      id: 2
                      name: urgent
                  attachments:
                    -
                      id: 1
                      file_path: uploaded_files/1/attachments/file1.jpeg
                  created_at: '2023-11-06T00:00:00.000000Z'
                  updated_at: '2023-11-06T00:00:00.000000Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: 'Updated Task Title'
                  description:
                    type: string
                    example: 'Updated task description.'
                  due_date:
                    type: string
                    example: '2023-11-15'
                  priority:
                    type: string
                    example: Normal
                  completed:
                    type: boolean
                    example: true
                  archived:
                    type: boolean
                    example: false
                  tags:
                    type: array
                    example:
                      -
                        id: 1
                        name: work
                      -
                        id: 2
                        name: urgent
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: work
                  attachments:
                    type: array
                    example:
                      -
                        id: 1
                        file_path: uploaded_files/1/attachments/file1.jpeg
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        file_path:
                          type: string
                          example: uploaded_files/1/attachments/file1.jpeg
                  created_at:
                    type: string
                    example: '2023-11-06T00:00:00.000000Z'
                  updated_at:
                    type: string
                    example: '2023-11-06T00:00:00.000000Z'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Task not found or update failed'
                properties:
                  error:
                    type: string
                    example: 'Task not found or update failed'
      tags:
        - 'Task Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'The title of the task.'
                  example: 'Updated Task Title'
                  nullable: false
                description:
                  type: string
                  description: 'The description of the task.'
                  example: 'Updated task description.'
                  nullable: false
                due_date:
                  type: date
                  description: 'The due date for the task.'
                  example: '2023-11-15'
                  nullable: true
                priority:
                  type: string
                  description: 'The priority of the task. Must be one of: Urgent, High, Normal, Low.'
                  example: Normal
                  nullable: true
                completed:
                  type: boolean
                  description: 'Optional. Whether the task is completed.'
                  example: true
                  nullable: true
                archived:
                  type: boolean
                  description: 'Optional. Whether the task is archived.'
                  example: false
                  nullable: true
                tags:
                  type: array
                  description: 'Optional. An array of tags to associate with the task.'
                  example:
                    - work
                    - urgent
                  items:
                    type: string
                attachments:
                  type: array
                  description: 'Optional. An array of files to attach to the task.'
                  example:
                    - dolor
                  items:
                    type: string
                attachmentsToDelete:
                  type: array
                  description: 'The <code>id</code> of an existing record in the attachments table.'
                  example:
                    - 8
                  items:
                    type: integer
      security: []
    delete:
      summary: 'Delete a task'
      operationId: deleteATask
      description: ''
      parameters: []
      responses:
        204:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Task not found or deletion failed'
                properties:
                  error:
                    type: string
                    example: 'Task not found or deletion failed'
      tags:
        - 'Task Management'
      security: []
    parameters:
      -
        in: path
        name: task
        description: 'The task.'
        example: illum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the task.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/tasks/{task}/toggleComplete':
    put:
      summary: 'Mark a task as complete'
      operationId: markATaskAsComplete
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  title: 'My Task'
                  completed: true
                  completed_at: '2023-11-06T12:00:00Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: 'My Task'
                  completed:
                    type: boolean
                    example: true
                  completed_at:
                    type: string
                    example: '2023-11-06T12:00:00Z'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Task not found'
                properties:
                  error:
                    type: string
                    example: 'Task not found'
      tags:
        - 'Task Management'
      security: []
    parameters:
      -
        in: path
        name: task
        description: 'The task.'
        example: nulla
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the task.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/tasks/{task}/toggleArchiveRestore':
    put:
      summary: 'Archive a task'
      operationId: archiveATask
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  title: 'My Task'
                  archived: true
                  archived_at: '2023-11-06T12:00:00Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: 'My Task'
                  archived:
                    type: boolean
                    example: true
                  archived_at:
                    type: string
                    example: '2023-11-06T12:00:00Z'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Task not found'
                properties:
                  error:
                    type: string
                    example: 'Task not found'
      tags:
        - 'Task Management'
      security: []
    parameters:
      -
        in: path
        name: task
        description: 'The task.'
        example: enim
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the task.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: "\nAPIs for managing user authentication."
  -
    name: 'Task Management'
    description: "\nAPIs for managing tasks."
