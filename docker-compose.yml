services:
  # Laravel Backend
  backend:
    build:
      context: ./backend
    container_name: backend
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
      - ./backend/.env:/var/www/.env
    networks:
      - app-network
    depends_on:
      - db

  nginx:
    image: nginx:latest
    container_name: nginx_server
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_DATABASE: todo_app
      MYSQL_ROOT_PASSWORD: 3jbY8KXCK2WKAohqniA=
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - app-network

  # VueJS Frontend
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/usr/src/app
    networks:
      - app-network

  cron:
    build:
      context: ./backend
      dockerfile: Dockerfile.cron  # Separate Dockerfile for cron
    container_name: laravel_cron
    command: cron -f
    depends_on:
      - backend
      - db
    volumes:
      - ./backend:/var/www
      - ./backend/.env:/var/www/.env
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: 3jbY8KXCK2WKAohqniA=
    ports:
      - "127.0.0.1:8080:80"
    depends_on:
      - db
    networks:
      - app-network

volumes:
  dbdata:

networks:
  app-network:
    driver: bridge